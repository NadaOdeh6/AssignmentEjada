package stepdefinitions;

import static org.junit.Assert.assertEquals;

import java.util.List;

import org.junit.Assert;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

import base.BaseTest;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import pages.LoginPage;
import utils.ExcelReader;




public class LoginSteps extends BaseTest {
	 LoginPage loginPage;
	 ExcelReader excelReader;
	 List<String[]> testData;

        @Test
	    @Given("I am on the login page")
	    public void i_am_on_the_login_page() {
	        setUp();
	        loginPage = new LoginPage(driver);
	    }
        
        @Test
	    @When("I login with invalid credentials")
	    public void i_login_with_invalid_credentials() {
	        loginPage.login("invalid_user", "invalid_password");
	    }
        
        @Test
	    @Then("I should see an error message")
	    public void i_should_see_an_error_message() {
      	  WebElement errorMessageElement = driver.findElement(By.xpath("//div[contains(@class, 'error-message')]//h3[contains(@data-test,'error')]"));
      	  if (errorMessageElement.isDisplayed()) {
              System.out.println("Error message is disaplyed.");
          } else {
              System.out.println("Error message is not disaplyed.");
          }
      	  tearDown();
	    }
        
        @Test
	    @When("I login with valid credentials")
	    public void i_login_with_valid_credentials() {
	        loginPage.login("standard_user", "secret_sauce");
	    }

        @Test
	    @Then("I should see the products page")
	    public void i_should_see_the_products_page() {
        	Assert.assertTrue(loginPage.getTitle().contains("Products"));	   
        	tearDown();
        	
	    }
	    
        @Test
	    @Given("I have the login data from Excel")
	    public void i_have_the_login_data_from_excel() {
	        excelReader = new ExcelReader("src/test/resources/Test_Data.csv");
	        testData = excelReader.readSheetData("LoginData");
	    }

        @Test
	    @When("I try to login with data from row {int}")
	    public void i_try_to_login_with_data_from_row(Integer rowIndex) {
	        setUp();
	        loginPage = new LoginPage(driver);

	        String[] row = testData.get(rowIndex);
	        String username = row[0];
	        String password = row[1];
	        String expectedResult = row[2];

	        loginPage.login(username, password);

	        // Validate the expected result
	        if (expectedResult.equals("Success")) {
	          Assert.assertTrue("User should be on the Products page", driver.getTitle().contains("Products"));
	        } else {
	        	  WebElement errorMessageElement = driver.findElement(By.xpath("//div[contains(@class, 'error-message')]//h3[contains(@data-test,'error')]"));
	              String actualErrorMessage = errorMessageElement.getText();
	              String expectedErrorMessage = "Epic sadface: Username and password do not match any user in this service";

	             
	              assertEquals(expectedErrorMessage, actualErrorMessage);
	        }

	        tearDown();
	    }
}
